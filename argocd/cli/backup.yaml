apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-cm","namespace":"argocd"}}
  labels:
    app.kubernetes.io/name: argocd-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-cm
---
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-rbac-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-rbac-cm","namespace":"argocd"}}
  labels:
    app.kubernetes.io/name: argocd-rbac-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-rbac-cm
---
apiVersion: v1
data:
  ssh_known_hosts: |
    # This file was automatically generated by hack/update-ssh-known-hosts.sh. DO NOT EDIT
    [ssh.github.com]:443 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
    [ssh.github.com]:443 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
    [ssh.github.com]:443 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
    bitbucket.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPIQmuzMBuKdWeF4+a2sjSSpBK0iqitSQ+5BM9KhpexuGt20JpTVM7u5BDZngncgrqDMbWdxMWWOGtZ9UgbqgZE=
    bitbucket.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIazEu89wgQZ4bqs3d63QSMzYVa0MuJ2e2gKTKqu+UUO
    bitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDQeJzhupRu0u0cdegZIa8e86EG2qOCsIsD1Xw0xSeiPDlCr7kq97NLmMbpKTX6Esc30NuoqEEHCuc7yWtwp8dI76EEEB1VqY9QJq6vk+aySyboD5QF61I/1WeTwu+deCbgKMGbUijeXhtfbxSxm6JwGrXrhBdofTsbKRUsrN1WoNgUa8uqN1Vx6WAJw1JHPhglEGGHea6QICwJOAr/6mrui/oB7pkaWKHj3z7d1IC4KWLtY47elvjbaTlkN04Kc/5LFEirorGYVbt15kAUlqGM65pk6ZBxtaO3+30LVlORZkxOh+LKL/BvbZ/iRNhItLqNyieoQj/uh/7Iv4uyH/cV/0b4WDSd3DptigWq84lJubb9t/DnZlrJazxyDCulTmKdOR7vs9gMTo+uoIrPSb8ScTtvw65+odKAlBj59dhnVp9zd7QUojOpXlL62Aw56U4oO+FALuevvMjiWeavKhJqlR7i5n9srYcrNV7ttmDw7kf/97P5zauIhxcjX+xHv4M=
    github.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=
    github.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl
    github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
    gitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=
    gitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf
    gitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9
    ssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
    vs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","data":{"ssh_known_hosts":"# This file was automatically generated by hack/update-ssh-known-hosts.sh. DO NOT EDIT\n[ssh.github.com]:443 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=\n[ssh.github.com]:443 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl\n[ssh.github.com]:443 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=\nbitbucket.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBPIQmuzMBuKdWeF4+a2sjSSpBK0iqitSQ+5BM9KhpexuGt20JpTVM7u5BDZngncgrqDMbWdxMWWOGtZ9UgbqgZE=\nbitbucket.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIIazEu89wgQZ4bqs3d63QSMzYVa0MuJ2e2gKTKqu+UUO\nbitbucket.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDQeJzhupRu0u0cdegZIa8e86EG2qOCsIsD1Xw0xSeiPDlCr7kq97NLmMbpKTX6Esc30NuoqEEHCuc7yWtwp8dI76EEEB1VqY9QJq6vk+aySyboD5QF61I/1WeTwu+deCbgKMGbUijeXhtfbxSxm6JwGrXrhBdofTsbKRUsrN1WoNgUa8uqN1Vx6WAJw1JHPhglEGGHea6QICwJOAr/6mrui/oB7pkaWKHj3z7d1IC4KWLtY47elvjbaTlkN04Kc/5LFEirorGYVbt15kAUlqGM65pk6ZBxtaO3+30LVlORZkxOh+LKL/BvbZ/iRNhItLqNyieoQj/uh/7Iv4uyH/cV/0b4WDSd3DptigWq84lJubb9t/DnZlrJazxyDCulTmKdOR7vs9gMTo+uoIrPSb8ScTtvw65+odKAlBj59dhnVp9zd7QUojOpXlL62Aw56U4oO+FALuevvMjiWeavKhJqlR7i5n9srYcrNV7ttmDw7kf/97P5zauIhxcjX+xHv4M=\ngithub.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBEmKSENjQEezOmxkZMy7opKgwFB9nkt5YRrYMjNuG5N87uRgg6CLrbo5wAdT/y6v0mKV0U2w0WZ2YB/++Tpockg=\ngithub.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMqqnkVzrm0SdG6UOoqKLsabgH5C9okWi0dh2l9GKJl\ngithub.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=\ngitlab.com ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFSMqzJeV9rUzU4kWitGjeR4PWSa29SPqJ1fVkhtj3Hw9xjLVXVYrU9QlYWrOLXBpQ6KWjbjTDTdDkoohFzgbEY=\ngitlab.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAfuCHKVTjquxvt6CM6tdG4SLp1Btn/nOeHHE5UOzRdf\ngitlab.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCsj2bNKTBSpIYDEGk9KxsGh3mySTRgMtXL583qmBpzeQ+jqCMRgBqB98u3z++J1sKlXHWfM9dyhSevkMwSbhoR8XIq/U0tCNyokEi/ueaBMCvbcTHhO7FcwzY92WK4Yt0aGROY5qX2UKSeOvuP4D6TPqKF1onrSzH9bx9XUf2lEdWT/ia1NEKjunUqu1xOB/StKDHMoX4/OKyIzuS0q/T1zOATthvasJFoPrAjkohTyaDUz2LN5JoH839hViyEG82yB+MjcFV5MU3N1l1QL3cVUCh93xSaua1N85qivl+siMkPGbO5xR/En4iEY6K2XPASUEMaieWVNTRCtJ4S8H+9\nssh.dev.azure.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\nvs-ssh.visualstudio.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-ssh-known-hosts-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-ssh-known-hosts-cm","namespace":"argocd"}}
  labels:
    app.kubernetes.io/name: argocd-ssh-known-hosts-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-ssh-known-hosts-cm
---
apiVersion: v1
kind: ConfigMap
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-tls-certs-cm","app.kubernetes.io/part-of":"argocd"},"name":"argocd-tls-certs-cm","namespace":"argocd"}}
  labels:
    app.kubernetes.io/name: argocd-tls-certs-cm
    app.kubernetes.io/part-of: argocd
  name: argocd-tls-certs-cm
---
apiVersion: v1
data:
  admin.password: JDJhJDEwJGZWRlJiQS5JUmtxeDZ0eDVZNnNmTXVWZTh6UThCY0VLcjBhWkxyOTRWSllETGZIR3RqLnRx
  admin.passwordMtime: MjAyNC0wOC0wOFQxNDo0Mjo1Nlo=
  server.secretkey: dm80aEIvNTVodXRqQjc4S25LV2lQZStCenpkK3VSdTkyUU9jTVM3UDM2OD0=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZakNDQWtxZ0F3SUJBZ0lRREt5VkJ6a2xJRTNNUEt5dmVMcDRZVEFOQmdrcWhraUc5dzBCQVFzRkFEQVMKTVJBd0RnWURWUVFLRXdkQmNtZHZJRU5FTUI0WERUSTBNRGd3T0RFME1qY3dNMW9YRFRJMU1EZ3dPREUwTWpjdwpNMW93RWpFUU1BNEdBMVVFQ2hNSFFYSm5ieUJEUkRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDCkFRb0NnZ0VCQUsrcFYvUmc4SUNoVUlFQ1A5MVhETklUUzF5bEh4TTBrZnQzbjdCT3MyMFg4SnJGZW42R2N2NzcKbm1CQ2xhWDg5UVM0eXJGdWJQY2dyVFNVcTA0dGJiYUtOdE12a09TSlpzLy84am44K0lMcTlLUEFqbTNvQnJVeQpjWXBRQmEyclBVOU5zeUp2UHRRM0hBWXlKNlhwOVJFS1ZzL3pmc3FvMkFqcnFOSlVjMWZMYW9LZVcvVlFLRytGCmlTOXBPVjR0cDN3VEZhSnBSb3lPcmRqK0NudXBWL3A3ZUt6OVZWcnk1ckpIRWRHN2swMmlkT3RxL05SNlE3M3MKbGhmRUpIWE0vckVwOGNSZ3ZKcWdiRkEvM1BHRVFlQzVoYUdPTHpyd1NaR1RsWW5WclFCbEtrMVM5SmFJeFVxaQprQmUwcDhudlhhM3BzSlZDQURUVmNWaWhEbU5PbHIwQ0F3RUFBYU9Cc3pDQnNEQU9CZ05WSFE4QkFmOEVCQU1DCkJhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUhBd0V3REFZRFZSMFRBUUgvQkFJd0FEQjdCZ05WSFJFRWREQnkKZ2dsc2IyTmhiR2h2YzNTQ0RXRnlaMjlqWkMxelpYSjJaWEtDRkdGeVoyOWpaQzF6WlhKMlpYSXVZWEpuYjJOawpnaGhoY21kdlkyUXRjMlZ5ZG1WeUxtRnlaMjlqWkM1emRtT0NKbUZ5WjI5alpDMXpaWEoyWlhJdVlYSm5iMk5rCkxuTjJZeTVqYkhWemRHVnlMbXh2WTJGc01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQ1Q3UC9rZVd0NmNLRjAKZlM2dit1R3J1a1A1Tks5N3lzT20xb0Q2YjlYMUg4UFc5bmY2RHdVVHdjdWUvT0JDNFNnSlNoM1BmZjM2UzlYTgpNdzBSckkvM2RrdEtXRXhMWTJrcjlZWVdESkNFa2cxbll5ZFdlbHFWamJ4dElWVkVNRUZsWnZOM2FrQmxsMEpZCkdJeUJobUxCeFFoSHlBdjdUSzJSZ1NVblBnenUzVUgxWU5aQjRpZ3BJZkFCaVV6NEFyNEUzUlA1anRTMXhTd2EKQWU5bC9LeHJSbCtCVkM4NXBVbDVoNmVOYmJpUERpYitOa0RSNXV2dGE5U3l4QVkrYlRLZzYxMU03a3lhOGVrRgpyOEVocUlERW11VjNoT2UxVWV6cm40UERNZG1OM3RVVFRTL0VHL0hYLzZXaU80a2l6cU90dzlYak54am1HcWx6CjBpdnFTQm1FCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcjZsWDlHRHdnS0ZRZ1FJLzNWY00waE5MWEtVZkV6U1IrM2Vmc0U2emJSZndtc1Y2CmZvWnkvdnVlWUVLVnBmejFCTGpLc1c1czl5Q3ROSlNyVGkxdHRvbzIweStRNUlsbXovL3lPZno0Z3VyMG84Q08KYmVnR3RUSnhpbEFGcmFzOVQwMnpJbTgrMURjY0JqSW5wZW4xRVFwV3ovTit5cWpZQ091bzBsUnpWOHRxZ3A1Ygo5VkFvYjRXSkwyazVYaTJuZkJNVm9tbEdqSTZ0MlA0S2U2bFgrbnQ0clAxVld2TG1za2NSMGJ1VFRhSjA2MnI4CjFIcER2ZXlXRjhRa2RjeitzU254eEdDOG1xQnNVRC9jOFlSQjRMbUZvWTR2T3ZCSmtaT1ZpZFd0QUdVcVRWTDAKbG9qRlNxS1FGN1NueWU5ZHJlbXdsVUlBTk5WeFdLRU9ZMDZXdlFJREFRQUJBb0lCQUZ1QndBdlNJL2NlRWEzaQoyaG9YcXRvVXF3R01FdkFTUnFuVTJ4OGhJRjhJUlpLYXBRRWNVUE43YURtRTlpZ042aVdYamg5NEF0T0o5akNaCjhkTTczeGRrVU1NYTJFUDFQOVhDNHhCS003c2ZZbW1iZVpiUGRBOFlSQVZsUWxBQ0VHSXJlOUhJV2RaN0R1STcKWm1RTHlGb2tKSzBYajBsTFE1OENCR1B0RWxqOUJZRHlQd2JRWldzRGFFbHRhc1duTWM3V1lUTzhsZXNMSVdrSwpnNzk3ck9ibHhSdDhzTERkY0p1NER2YWJiSzV0WVBQM1lZcXgreHE3TWd0cGkwUW5yTzd6UlBaK3M3NmtCOExUCm5GR0ZhbWVtUjZBWUNid0k3ZnBqamg1WkRQcnBKaDc3Rk05U1NHaXdGVmNrUFlienNwWFd0REV6SWIvM3paWHkKckZMVE81RUNnWUVBMGxsMHFqc2VPa1hMTXdzWVd3dnFNNU5GWmVZd1A2MzY2dWNYekYvcThpMVZEeVNsMGZoYgpOZDIwUnNuK0NjNDcwV1owRXBYNWFiVGF0Wm5nSlRkeGplcW1pUkhHM1FIV3BqckJhcXRnT2JDcFVueVNIQ0pUCmppVzRXY0pKUEM4b29sSThCczBVYmhMOVlFQ0tsdjY5Y3RzMlpuZFo1Q2NIUEhzaVVEdjArQzhDZ1lFQTFjaTAKSGc3bkg0bXNSa1RKYWRUQTFSTStaM2FuSnlWYkFsbnJiUGxubnlrdW1jRDFFalNnSTFiYzZ5Sk1Hc2FBYUlwegpjSHQ4S0x3V2JpSnhDaGEyZnB6d25raXh1MkpDc1MvR0JORWUzNkN2cDNHbTk2NVNzUVM1bXpUaUswTGVTQ2I5CjhmK0N2V3BGak9OY0xraTJGd1hjVmhYUU5rNDRwT0ZWR0Fqd2VOTUNnWUF1TFVzcUw2NDBGcXhEK1ZTUWNDNHEKd2xMQ3l1U2VwaC9tUDNMKy83T0JGS2lPbVhuNWZTN3d4VW5WSEhTelRGM2ZXMEZ4N3hDQXZ4NGdMYmFDRlFqTgpvY3lMWEthdVQ4QUNYL1dqNkJsSXNOcUs3Q1BiSDBIK2U1TmJ5UVh3dTEyTlBNWkdxL0NuTlc0QUdrc1NXTHZZCklmMXdReFV0dTgrZjNGd3RCdXlCS3dLQmdRQ25oTC92RmNweDRoV0djbnhKVzVkRzMrOTBiM3VIcHpQclliNmoKQThQNDZmSkVOUGxVckx3WE5RZWprSnFHR0ttaVFXczM1dXRobUJFVGVCV1B6RUJ3Y2xYeUVoQ0RQdm4za2ZIZQo4R2I2NFJVRFpvRnBiOFlJUkNXVXd4bSt3SVVoa0x4SkZ1akJ1RGFMc2RVWHg0NDMrRFd4bHlJeWk1VERUbmE1CmdMZStWUUtCZ1FDbW5yeGlEbWcrWmp6VDcwdXRicFdWdFZ3QmYvaTVZZnJHNVVpVnN1TkRqbi9KekRVQTFTZlMKSU5sSW9vdWRDaWVuTGg0MnNzNHhyZmkxRkQ0RWV4NTlZMjBBYVR6OHBuMEpxdk50UFNjZm9pV0U3ZUVhTHJHcgpnYUtrU3UwUlJWamNVTkc1VE5oZ2JOb3JkUTNmNTlVdHhoSWpKdUV2TElPMVR0d3pveHpMdVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Secret","metadata":{"annotations":{},"labels":{"app.kubernetes.io/name":"argocd-secret","app.kubernetes.io/part-of":"argocd"},"name":"argocd-secret","namespace":"argocd"},"type":"Opaque"}
  labels:
    app.kubernetes.io/name: argocd-secret
    app.kubernetes.io/part-of: argocd
  name: argocd-secret
type: Opaque
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: default
spec:
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
  destinations:
  - namespace: '*'
    server: '*'
  sourceRepos:
  - '*'
status: {}
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: allso-front
spec:
  destination:
    namespace: allso
    server: https://kubernetes.default.svc
  project: default
  source:
    kustomize:
      namespace: allso
    path: allso/front/kustomize
    repoURL: https://github.com/khk04/argocd.git
    targetRevision: HEAD
  syncPolicy:
    automated: {}
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
      limit: 2
    syncOptions:
    - CreateNamespace=true
    - Replace=true
status:
  controllerNamespace: argocd
  health:
    status: Healthy
  history:
  - deployStartedAt: "2024-08-08T14:46:34Z"
    deployedAt: "2024-08-08T14:46:34Z"
    id: 0
    initiatedBy:
      automated: true
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    source:
      kustomize:
        namespace: allso
      path: allso/front/kustomize
      repoURL: https://github.com/khk04/argocd.git
      targetRevision: HEAD
  operationState:
    finishedAt: "2024-08-08T14:46:34Z"
    message: successfully synced (all tasks run)
    operation:
      initiatedBy:
        automated: true
      retry:
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 3m0s
        limit: 2
      sync:
        revision: 8a1d87610812d9341c78673bf3141e26452444ec
        syncOptions:
        - CreateNamespace=true
        - Replace=true
    phase: Succeeded
    startedAt: "2024-08-08T14:46:34Z"
    syncResult:
      resources:
      - group: ""
        hookPhase: Running
        kind: Namespace
        message: namespace/allso created
        name: allso
        namespace: allso
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Secret
        message: secret/juxtagene-docker-registry created
        name: juxtagene-docker-registry
        namespace: allso
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/frontend created
        name: frontend
        namespace: allso
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apps
        hookPhase: Running
        kind: Deployment
        message: deployment.apps/frontend created
        name: frontend
        namespace: allso
        status: Synced
        syncPhase: Sync
        version: v1
      - group: networking.k8s.io
        hookPhase: Running
        kind: Ingress
        message: ingress.networking.k8s.io/frontend created
        name: frontend
        namespace: allso
        status: Synced
        syncPhase: Sync
        version: v1
      revision: 8a1d87610812d9341c78673bf3141e26452444ec
      source:
        kustomize:
          namespace: allso
        path: allso/front/kustomize
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
  reconciledAt: "2024-08-09T04:11:59Z"
  resources:
  - kind: Namespace
    name: allso
    status: Synced
    version: v1
  - kind: Secret
    name: juxtagene-docker-registry
    namespace: allso
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: frontend
    namespace: allso
    status: Synced
    version: v1
  - group: apps
    health:
      status: Healthy
    kind: Deployment
    name: frontend
    namespace: allso
    status: Synced
    version: v1
  - group: networking.k8s.io
    health:
      status: Healthy
    kind: Ingress
    name: frontend
    namespace: allso
    status: Synced
    version: v1
  sourceType: Kustomize
  summary:
    externalURLs:
    - https://allso.juxtagene.com/
    images:
    - docker.juxtagene.com/services/allso-frontend-monitor:latest
    - busybox
  sync:
    comparedTo:
      destination:
        namespace: allso
        server: https://kubernetes.default.svc
      source:
        kustomize:
          namespace: allso
        path: allso/front/kustomize
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    status: Synced
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: biso
spec:
  destination:
    namespace: biso
    server: https://kubernetes.default.svc
  project: default
  source:
    path: biso/kustomize/backend
    repoURL: https://github.com/khk04/argocd.git
    targetRevision: HEAD
  syncPolicy:
    automated: {}
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
      limit: 2
    syncOptions:
    - CreateNamespace=true
    - Replace=true
status:
  controllerNamespace: argocd
  health:
    status: Healthy
  history:
  - deployStartedAt: "2024-08-08T14:49:02Z"
    deployedAt: "2024-08-08T14:49:05Z"
    id: 0
    initiatedBy:
      automated: true
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    source:
      path: biso/kustomize/backend
      repoURL: https://github.com/khk04/argocd.git
      targetRevision: HEAD
  operationState:
    finishedAt: "2024-08-08T14:49:05Z"
    message: successfully synced (all tasks run)
    operation:
      initiatedBy:
        automated: true
      retry:
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 3m0s
        limit: 2
      sync:
        revision: 8a1d87610812d9341c78673bf3141e26452444ec
        syncOptions:
        - CreateNamespace=true
        - Replace=true
    phase: Succeeded
    startedAt: "2024-08-08T14:49:02Z"
    syncResult:
      resources:
      - group: ""
        hookPhase: Running
        kind: Namespace
        message: namespace/biso created
        name: biso
        namespace: ""
        status: Synced
        syncPhase: PreSync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Secret
        message: secret/juxtagene-docker-registry created
        name: juxtagene-docker-registry
        namespace: biso
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/backend created
        name: backend
        namespace: biso
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apps
        hookPhase: Running
        kind: Deployment
        message: deployment.apps/backend created
        name: backend
        namespace: biso
        status: Synced
        syncPhase: Sync
        version: v1
      - group: networking.k8s.io
        hookPhase: Running
        kind: Ingress
        message: ingress.networking.k8s.io/backend created
        name: backend
        namespace: biso
        status: Synced
        syncPhase: Sync
        version: v1
      - group: cert-manager.io
        hookPhase: Running
        kind: Issuer
        message: issuer.cert-manager.io/letsencrypt-prod-biso created
        name: letsencrypt-prod-biso
        namespace: biso
        status: Synced
        syncPhase: Sync
        version: v1
      revision: 8a1d87610812d9341c78673bf3141e26452444ec
      source:
        path: biso/kustomize/backend
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
  reconciledAt: "2024-08-09T04:11:59Z"
  resources:
  - kind: Secret
    name: juxtagene-docker-registry
    namespace: biso
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: backend
    namespace: biso
    status: Synced
    version: v1
  - group: apps
    health:
      status: Healthy
    kind: Deployment
    name: backend
    namespace: biso
    status: Synced
    version: v1
  - group: cert-manager.io
    health:
      message: The ACME account was registered with the ACME server
      status: Healthy
    kind: Issuer
    name: letsencrypt-prod-biso
    namespace: biso
    status: Synced
    version: v1
  - group: networking.k8s.io
    health:
      status: Healthy
    kind: Ingress
    name: backend
    namespace: biso
    status: Synced
    version: v1
  sourceType: Kustomize
  summary:
    externalURLs:
    - https://biso.juxtagene.com/
    images:
    - docker.juxtagene.com/services/biso-backend-api-server:latest
    - busybox
  sync:
    comparedTo:
      destination:
        namespace: biso
        server: https://kubernetes.default.svc
      source:
        path: biso/kustomize/backend
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    status: Synced
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: biso-db
spec:
  destination:
    namespace: biso
    server: https://kubernetes.default.svc
  project: default
  source:
    path: biso/kustomize/backend-db
    repoURL: https://github.com/khk04/argocd.git
    targetRevision: HEAD
  syncPolicy:
    automated: {}
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
      limit: 2
    syncOptions:
    - CreateNamespace=true
    - Replace=true
status:
  controllerNamespace: argocd
  health:
    status: Healthy
  history:
  - deployStartedAt: "2024-08-08T14:49:32Z"
    deployedAt: "2024-08-08T14:49:33Z"
    id: 0
    initiatedBy:
      automated: true
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    source:
      path: biso/kustomize/backend-db
      repoURL: https://github.com/khk04/argocd.git
      targetRevision: HEAD
  operationState:
    finishedAt: "2024-08-08T14:49:33Z"
    message: successfully synced (all tasks run)
    operation:
      initiatedBy:
        automated: true
      retry:
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 3m0s
        limit: 2
      sync:
        revision: 8a1d87610812d9341c78673bf3141e26452444ec
        syncOptions:
        - CreateNamespace=true
        - Replace=true
    phase: Succeeded
    startedAt: "2024-08-08T14:49:32Z"
    syncResult:
      resources:
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/postgresql created
        name: postgresql
        namespace: biso
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: ReplicationController
        message: replicationcontroller/postgresql created
        name: postgresql
        namespace: biso
        status: Synced
        syncPhase: Sync
        version: v1
      revision: 8a1d87610812d9341c78673bf3141e26452444ec
      source:
        path: biso/kustomize/backend-db
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
  reconciledAt: "2024-08-09T04:11:59Z"
  resources:
  - kind: ReplicationController
    name: postgresql
    namespace: biso
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: postgresql
    namespace: biso
    status: Synced
    version: v1
  sourceType: Kustomize
  summary:
    images:
    - sameersbn/postgresql:10
  sync:
    comparedTo:
      destination:
        namespace: biso
        server: https://kubernetes.default.svc
      source:
        path: biso/kustomize/backend-db
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    status: Synced
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: docker-registry
spec:
  destination:
    namespace: docker
    server: https://kubernetes.default.svc
  project: default
  source:
    path: docker-registry/kustomize
    repoURL: https://github.com/khk04/argocd.git
    targetRevision: HEAD
  syncPolicy:
    automated: {}
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
      limit: 2
    syncOptions:
    - CreateNamespace=true
    - Replace=true
status:
  controllerNamespace: argocd
  health:
    status: Healthy
  history:
  - deployStartedAt: "2024-08-08T14:50:21Z"
    deployedAt: "2024-08-08T14:50:22Z"
    id: 0
    initiatedBy:
      automated: true
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    source:
      path: docker-registry/kustomize
      repoURL: https://github.com/khk04/argocd.git
      targetRevision: HEAD
  operationState:
    finishedAt: "2024-08-08T14:50:22Z"
    message: successfully synced (all tasks run)
    operation:
      initiatedBy:
        automated: true
      retry:
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 3m0s
        limit: 2
      sync:
        revision: 8a1d87610812d9341c78673bf3141e26452444ec
        syncOptions:
        - CreateNamespace=true
        - Replace=true
    phase: Succeeded
    startedAt: "2024-08-08T14:50:21Z"
    syncResult:
      resources:
      - group: ""
        hookPhase: Running
        kind: Namespace
        message: namespace/docker created
        name: docker
        namespace: docker
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: ConfigMap
        message: configmap/htpasswd-volume-cm created
        name: htpasswd-volume-cm
        namespace: docker
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/docker-registry-service created
        name: docker-registry-service
        namespace: docker
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/registry-ui created
        name: registry-ui
        namespace: docker
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apps
        hookPhase: Running
        kind: Deployment
        message: deployment.apps/docker-registry-service created
        name: docker-registry-service
        namespace: docker
        status: Synced
        syncPhase: Sync
        version: v1
      - group: networking.k8s.io
        hookPhase: Running
        kind: Ingress
        message: ingress.networking.k8s.io/registry-ui created
        name: registry-ui
        namespace: docker
        status: Synced
        syncPhase: Sync
        version: v1
      - group: networking.k8s.io
        hookPhase: Running
        kind: Ingress
        message: ingress.networking.k8s.io/docker-registry-service created
        name: docker-registry-service
        namespace: docker
        status: Synced
        syncPhase: Sync
        version: v1
      - group: cert-manager.io
        hookPhase: Running
        kind: Issuer
        message: issuer.cert-manager.io/letsencrypt-prod-docker created
        name: letsencrypt-prod-docker
        namespace: docker
        status: Synced
        syncPhase: Sync
        version: v1
      - group: cert-manager.io
        hookPhase: Running
        kind: Issuer
        message: issuer.cert-manager.io/letsencrypt-prod-docker-ui created
        name: letsencrypt-prod-docker-ui
        namespace: docker
        status: Synced
        syncPhase: Sync
        version: v1
      revision: 8a1d87610812d9341c78673bf3141e26452444ec
      source:
        path: docker-registry/kustomize
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
  reconciledAt: "2024-08-09T04:11:59Z"
  resources:
  - kind: ConfigMap
    name: htpasswd-volume-cm
    namespace: docker
    status: Synced
    version: v1
  - kind: Namespace
    name: docker
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: docker-registry-service
    namespace: docker
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: registry-ui
    namespace: docker
    status: Synced
    version: v1
  - group: apps
    health:
      status: Healthy
    kind: Deployment
    name: docker-registry-service
    namespace: docker
    status: Synced
    version: v1
  - group: cert-manager.io
    health:
      message: The ACME account was registered with the ACME server
      status: Healthy
    kind: Issuer
    name: letsencrypt-prod-docker
    namespace: docker
    status: Synced
    version: v1
  - group: cert-manager.io
    health:
      message: The ACME account was registered with the ACME server
      status: Healthy
    kind: Issuer
    name: letsencrypt-prod-docker-ui
    namespace: docker
    status: Synced
    version: v1
  - group: networking.k8s.io
    health:
      status: Healthy
    kind: Ingress
    name: docker-registry-service
    namespace: docker
    status: Synced
    version: v1
  - group: networking.k8s.io
    health:
      status: Healthy
    kind: Ingress
    name: registry-ui
    namespace: docker
    status: Synced
    version: v1
  sourceType: Kustomize
  summary:
    externalURLs:
    - https://docker.juxtagene.com/
    - https://dui.juxtagene.com/
    images:
    - joxit/docker-registry-ui:2.0
    - registry:2.7.0
  sync:
    comparedTo:
      destination:
        namespace: docker
        server: https://kubernetes.default.svc
      source:
        path: docker-registry/kustomize
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    status: Synced
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elk-logstash
spec:
  destination:
    namespace: elk
    server: https://kubernetes.default.svc
  project: default
  source:
    helm:
      valueFiles:
      - values.yaml
    path: elk/logstash
    repoURL: https://github.com/khk04/argocd.git
    targetRevision: HEAD
  syncPolicy:
    automated: {}
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
      limit: 2
    syncOptions:
    - CreateNamespace=true
    - Replace=true
status:
  controllerNamespace: argocd
  health:
    status: Healthy
  history:
  - deployStartedAt: "2024-08-08T14:52:39Z"
    deployedAt: "2024-08-08T14:52:40Z"
    id: 0
    initiatedBy:
      automated: true
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    source:
      helm:
        valueFiles:
        - values.yaml
      path: elk/logstash
      repoURL: https://github.com/khk04/argocd.git
      targetRevision: HEAD
  operationState:
    finishedAt: "2024-08-08T14:52:40Z"
    message: successfully synced (all tasks run)
    operation:
      initiatedBy:
        automated: true
      retry:
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 3m0s
        limit: 2
      sync:
        revision: 8a1d87610812d9341c78673bf3141e26452444ec
        syncOptions:
        - CreateNamespace=true
        - Replace=true
    phase: Succeeded
    startedAt: "2024-08-08T14:52:39Z"
    syncResult:
      resources:
      - group: policy
        hookPhase: Running
        kind: PodDisruptionBudget
        message: poddisruptionbudget.policy/elk-logstash-logstash-pdb created
        name: elk-logstash-logstash-pdb
        namespace: elk
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: ConfigMap
        message: configmap/elk-logstash-logstash-pipeline created
        name: elk-logstash-logstash-pipeline
        namespace: elk
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/elk-logstash-logstash-headless created
        name: elk-logstash-logstash-headless
        namespace: elk
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apps
        hookPhase: Running
        kind: StatefulSet
        message: statefulset.apps/elk-logstash-logstash created
        name: elk-logstash-logstash
        namespace: elk
        status: Synced
        syncPhase: Sync
        version: v1
      revision: 8a1d87610812d9341c78673bf3141e26452444ec
      source:
        helm:
          valueFiles:
          - values.yaml
        path: elk/logstash
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
  reconciledAt: "2024-08-09T04:11:59Z"
  resources:
  - kind: ConfigMap
    name: elk-logstash-logstash-pipeline
    namespace: elk
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: elk-logstash-logstash-headless
    namespace: elk
    status: Synced
    version: v1
  - group: apps
    health:
      message: statefulset rolling update complete 1 pods at revision elk-logstash-logstash-5f55fcbd8b...
      status: Healthy
    kind: StatefulSet
    name: elk-logstash-logstash
    namespace: elk
    status: Synced
    version: v1
  - group: policy
    kind: PodDisruptionBudget
    name: elk-logstash-logstash-pdb
    namespace: elk
    status: Synced
    version: v1
  sourceType: Helm
  summary:
    images:
    - opensearchproject/logstash-oss-with-opensearch-output-plugin:8.6.1
  sync:
    comparedTo:
      destination:
        namespace: elk
        server: https://kubernetes.default.svc
      source:
        helm:
          valueFiles:
          - values.yaml
        path: elk/logstash
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    status: Synced
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elk-opensearch
spec:
  destination:
    namespace: elk
    server: https://kubernetes.default.svc
  project: default
  source:
    helm:
      valueFiles:
      - values.yaml
    path: elk/opensearch
    repoURL: https://github.com/khk04/argocd.git
    targetRevision: HEAD
  syncPolicy:
    automated: {}
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
      limit: 2
    syncOptions:
    - CreateNamespace=true
    - Replace=true
status:
  controllerNamespace: argocd
  health:
    status: Healthy
  history:
  - deployStartedAt: "2024-08-08T14:50:57Z"
    deployedAt: "2024-08-08T14:50:59Z"
    id: 0
    initiatedBy:
      automated: true
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    source:
      helm:
        valueFiles:
        - values.yaml
      path: elk/opensearch
      repoURL: https://github.com/khk04/argocd.git
      targetRevision: HEAD
  operationState:
    finishedAt: "2024-08-08T14:50:59Z"
    message: successfully synced (all tasks run)
    operation:
      initiatedBy:
        automated: true
      retry:
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 3m0s
        limit: 2
      sync:
        revision: 8a1d87610812d9341c78673bf3141e26452444ec
        syncOptions:
        - CreateNamespace=true
        - Replace=true
    phase: Succeeded
    startedAt: "2024-08-08T14:50:57Z"
    syncResult:
      resources:
      - group: ""
        hookPhase: Running
        kind: Namespace
        message: namespace/elk created
        name: elk
        namespace: ""
        status: Synced
        syncPhase: PreSync
        version: v1
      - group: policy
        hookPhase: Running
        kind: PodDisruptionBudget
        message: poddisruptionbudget.policy/opensearch-cluster-master-pdb created
        name: opensearch-cluster-master-pdb
        namespace: elk
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: ConfigMap
        message: configmap/opensearch-cluster-master-config created
        name: opensearch-cluster-master-config
        namespace: elk
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/opensearch-cluster-master-headless created
        name: opensearch-cluster-master-headless
        namespace: elk
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/opensearch-cluster-master created
        name: opensearch-cluster-master
        namespace: elk
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apps
        hookPhase: Running
        kind: StatefulSet
        message: statefulset.apps/opensearch-cluster-master created
        name: opensearch-cluster-master
        namespace: elk
        status: Synced
        syncPhase: Sync
        version: v1
      revision: 8a1d87610812d9341c78673bf3141e26452444ec
      source:
        helm:
          valueFiles:
          - values.yaml
        path: elk/opensearch
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
  reconciledAt: "2024-08-09T04:11:59Z"
  resources:
  - kind: ConfigMap
    name: opensearch-cluster-master-config
    namespace: elk
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: opensearch-cluster-master
    namespace: elk
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: opensearch-cluster-master-headless
    namespace: elk
    status: Synced
    version: v1
  - group: apps
    health:
      message: statefulset rolling update complete 3 pods at revision opensearch-cluster-master-89584d7c...
      status: Healthy
    kind: StatefulSet
    name: opensearch-cluster-master
    namespace: elk
    status: Synced
    version: v1
  - group: policy
    kind: PodDisruptionBudget
    name: opensearch-cluster-master-pdb
    namespace: elk
    status: Synced
    version: v1
  sourceType: Helm
  summary:
    images:
    - busybox:1.27.2
    - opensearchproject/opensearch:2.13.0
  sync:
    comparedTo:
      destination:
        namespace: elk
        server: https://kubernetes.default.svc
      source:
        helm:
          valueFiles:
          - values.yaml
        path: elk/opensearch
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    status: Synced
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: elk-opensearch-dashboard
spec:
  destination:
    namespace: elk
    server: https://kubernetes.default.svc
  project: default
  source:
    helm:
      valueFiles:
      - values.yaml
    path: elk/opensearch-dashboards
    repoURL: https://github.com/khk04/argocd.git
    targetRevision: HEAD
  syncPolicy:
    automated: {}
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
      limit: 2
    syncOptions:
    - CreateNamespace=true
    - Replace=true
status:
  controllerNamespace: argocd
  health:
    status: Healthy
  history:
  - deployStartedAt: "2024-08-08T14:51:35Z"
    deployedAt: "2024-08-08T14:51:57Z"
    id: 0
    initiatedBy:
      automated: true
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    source:
      helm:
        valueFiles:
        - values.yaml
      path: elk/opensearch-dashboards
      repoURL: https://github.com/khk04/argocd.git
      targetRevision: HEAD
  operationState:
    finishedAt: "2024-08-08T14:51:57Z"
    message: successfully synced (all tasks run)
    operation:
      initiatedBy:
        automated: true
      retry:
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 3m0s
        limit: 2
      sync:
        revision: 8a1d87610812d9341c78673bf3141e26452444ec
        syncOptions:
        - CreateNamespace=true
        - Replace=true
    phase: Succeeded
    retryCount: 1
    startedAt: "2024-08-08T14:51:35Z"
    syncResult:
      resources:
      - group: ""
        hookPhase: Running
        kind: ServiceAccount
        message: serviceaccount/elk-opensearch-dashboard-opensearch-dashboards-dashboards
          replaced
        name: elk-opensearch-dashboard-opensearch-dashboards-dashboards
        namespace: elk
        status: Synced
        syncPhase: Sync
        version: v1
      - group: rbac.authorization.k8s.io
        hookPhase: Running
        kind: RoleBinding
        message: rolebinding.rbac.authorization.k8s.io/elk-opensearch-dashboard-opensearch-dashboards-dashboards-rolebinding
          reconciled. rolebinding.rbac.authorization.k8s.io/elk-opensearch-dashboard-opensearch-dashboards-dashboards-rolebinding
          replaced
        name: elk-opensearch-dashboard-opensearch-dashboards-dashboards-rolebinding
        namespace: elk
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/elk-opensearch-dashboard-opensearch-dashboards replaced
        name: elk-opensearch-dashboard-opensearch-dashboards
        namespace: elk
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apps
        hookPhase: Running
        kind: Deployment
        message: deployment.apps/elk-opensearch-dashboard-opensearch-dashboards replaced
        name: elk-opensearch-dashboard-opensearch-dashboards
        namespace: elk
        status: Synced
        syncPhase: Sync
        version: v1
      - group: networking.k8s.io
        hookPhase: Running
        kind: Ingress
        message: ingress.networking.k8s.io/elk-opensearch-dashboard-opensearch-dashboards
          replaced
        name: elk-opensearch-dashboard-opensearch-dashboards
        namespace: elk
        status: Synced
        syncPhase: Sync
        version: v1
      revision: 8a1d87610812d9341c78673bf3141e26452444ec
      source:
        helm:
          valueFiles:
          - values.yaml
        path: elk/opensearch-dashboards
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
  reconciledAt: "2024-08-09T04:11:59Z"
  resources:
  - health:
      status: Healthy
    kind: Service
    name: elk-opensearch-dashboard-opensearch-dashboards
    namespace: elk
    status: Synced
    version: v1
  - kind: ServiceAccount
    name: elk-opensearch-dashboard-opensearch-dashboards-dashboards
    namespace: elk
    status: Synced
    version: v1
  - group: apps
    health:
      status: Healthy
    kind: Deployment
    name: elk-opensearch-dashboard-opensearch-dashboards
    namespace: elk
    status: Synced
    version: v1
  - group: networking.k8s.io
    health:
      status: Healthy
    kind: Ingress
    name: elk-opensearch-dashboard-opensearch-dashboards
    namespace: elk
    status: Synced
    version: v1
  - group: rbac.authorization.k8s.io
    kind: RoleBinding
    name: elk-opensearch-dashboard-opensearch-dashboards-dashboards-rolebinding
    namespace: elk
    status: Synced
    version: v1
  sourceType: Helm
  summary:
    externalURLs:
    - https://elk.juxtagene.com/
    images:
    - opensearchproject/opensearch-dashboards:2.6.0
  sync:
    comparedTo:
      destination:
        namespace: elk
        server: https://kubernetes.default.svc
      source:
        helm:
          valueFiles:
          - values.yaml
        path: elk/opensearch-dashboards
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    status: Synced
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kafka
spec:
  destination:
    namespace: kafka
    server: https://kubernetes.default.svc
  project: default
  source:
    helm:
      valueFiles:
      - values.yaml
    path: kafka/chart/kafka
    repoURL: https://github.com/khk04/argocd.git
    targetRevision: HEAD
  syncPolicy:
    automated: {}
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
      limit: 2
    syncOptions:
    - CreateNamespace=true
    - Replace=true
status:
  controllerNamespace: argocd
  health:
    status: Healthy
  history:
  - deployStartedAt: "2024-08-08T14:54:04Z"
    deployedAt: "2024-08-08T14:54:07Z"
    id: 0
    initiatedBy:
      automated: true
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    source:
      helm:
        valueFiles:
        - values.yaml
      path: kafka/chart/kafka
      repoURL: https://github.com/khk04/argocd.git
      targetRevision: HEAD
  operationState:
    finishedAt: "2024-08-08T14:54:07Z"
    message: successfully synced (all tasks run)
    operation:
      initiatedBy:
        automated: true
      retry:
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 3m0s
        limit: 2
      sync:
        revision: 8a1d87610812d9341c78673bf3141e26452444ec
        syncOptions:
        - CreateNamespace=true
        - Replace=true
    phase: Succeeded
    startedAt: "2024-08-08T14:54:04Z"
    syncResult:
      resources:
      - group: ""
        hookPhase: Running
        kind: Namespace
        message: namespace/kafka created
        name: kafka
        namespace: ""
        status: Synced
        syncPhase: PreSync
        version: v1
      - group: ""
        hookPhase: Running
        kind: ServiceAccount
        message: serviceaccount/kafka created
        name: kafka
        namespace: kafka
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: ConfigMap
        message: configmap/kafka-zookeeper-scripts created
        name: kafka-zookeeper-scripts
        namespace: kafka
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: ConfigMap
        message: configmap/kafka-scripts created
        name: kafka-scripts
        namespace: kafka
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/kafka-headless created
        name: kafka-headless
        namespace: kafka
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/kafka-zookeeper-headless created
        name: kafka-zookeeper-headless
        namespace: kafka
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/kafka created
        name: kafka
        namespace: kafka
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/kafka-2-external created
        name: kafka-2-external
        namespace: kafka
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/kafka-zookeeper created
        name: kafka-zookeeper
        namespace: kafka
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/kafka-1-external created
        name: kafka-1-external
        namespace: kafka
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/kafka-0-external created
        name: kafka-0-external
        namespace: kafka
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apps
        hookPhase: Running
        kind: StatefulSet
        message: statefulset.apps/kafka-zookeeper created
        name: kafka-zookeeper
        namespace: kafka
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apps
        hookPhase: Running
        kind: StatefulSet
        message: statefulset.apps/kafka created
        name: kafka
        namespace: kafka
        status: Synced
        syncPhase: Sync
        version: v1
      revision: 8a1d87610812d9341c78673bf3141e26452444ec
      source:
        helm:
          valueFiles:
          - values.yaml
        path: kafka/chart/kafka
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
  reconciledAt: "2024-08-09T04:11:59Z"
  resources:
  - kind: ConfigMap
    name: kafka-scripts
    namespace: kafka
    status: Synced
    version: v1
  - kind: ConfigMap
    name: kafka-zookeeper-scripts
    namespace: kafka
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: kafka
    namespace: kafka
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: kafka-0-external
    namespace: kafka
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: kafka-1-external
    namespace: kafka
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: kafka-2-external
    namespace: kafka
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: kafka-headless
    namespace: kafka
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: kafka-zookeeper
    namespace: kafka
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: kafka-zookeeper-headless
    namespace: kafka
    status: Synced
    version: v1
  - kind: ServiceAccount
    name: kafka
    namespace: kafka
    status: Synced
    version: v1
  - group: apps
    health:
      message: statefulset rolling update complete 3 pods at revision kafka-7655f87754...
      status: Healthy
    kind: StatefulSet
    name: kafka
    namespace: kafka
    status: Synced
    version: v1
  - group: apps
    health:
      message: 'partitioned roll out complete: 3 new pods have been updated...'
      status: Healthy
    kind: StatefulSet
    name: kafka-zookeeper
    namespace: kafka
    status: Synced
    version: v1
  sourceType: Helm
  summary:
    images:
    - docker.io/bitnami/kafka:3.3.1-debian-11-r11
    - docker.io/bitnami/zookeeper:3.8.0-debian-11-r47
  sync:
    comparedTo:
      destination:
        namespace: kafka
        server: https://kubernetes.default.svc
      source:
        helm:
          valueFiles:
          - values.yaml
        path: kafka/chart/kafka
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    status: Synced
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kafka-ui
spec:
  destination:
    namespace: kafka
    server: https://kubernetes.default.svc
  project: default
  source:
    helm:
      valueFiles:
      - values.yaml
    path: kafka/chart/kafka-ui
    repoURL: https://github.com/khk04/argocd.git
    targetRevision: HEAD
  syncPolicy:
    automated: {}
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
      limit: 2
    syncOptions:
    - CreateNamespace=true
    - Replace=true
status:
  controllerNamespace: argocd
  health:
    status: Healthy
  history:
  - deployStartedAt: "2024-08-08T14:54:15Z"
    deployedAt: "2024-08-08T14:54:16Z"
    id: 0
    initiatedBy:
      automated: true
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    source:
      helm:
        valueFiles:
        - values.yaml
      path: kafka/chart/kafka-ui
      repoURL: https://github.com/khk04/argocd.git
      targetRevision: HEAD
  operationState:
    finishedAt: "2024-08-08T14:54:16Z"
    message: successfully synced (all tasks run)
    operation:
      initiatedBy:
        automated: true
      retry:
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 3m0s
        limit: 2
      sync:
        revision: 8a1d87610812d9341c78673bf3141e26452444ec
        syncOptions:
        - CreateNamespace=true
        - Replace=true
    phase: Succeeded
    startedAt: "2024-08-08T14:54:15Z"
    syncResult:
      resources:
      - group: ""
        hookPhase: Running
        kind: ServiceAccount
        message: serviceaccount/kafka-ui created
        name: kafka-ui
        namespace: kafka
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: ConfigMap
        message: configmap/kafka-ui created
        name: kafka-ui
        namespace: kafka
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/kafka-ui created
        name: kafka-ui
        namespace: kafka
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apps
        hookPhase: Running
        kind: Deployment
        message: deployment.apps/kafka-ui created
        name: kafka-ui
        namespace: kafka
        status: Synced
        syncPhase: Sync
        version: v1
      - group: networking.k8s.io
        hookPhase: Running
        kind: Ingress
        message: ingress.networking.k8s.io/kafka-ui created
        name: kafka-ui
        namespace: kafka
        status: Synced
        syncPhase: Sync
        version: v1
      revision: 8a1d87610812d9341c78673bf3141e26452444ec
      source:
        helm:
          valueFiles:
          - values.yaml
        path: kafka/chart/kafka-ui
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
  reconciledAt: "2024-08-09T04:11:59Z"
  resources:
  - kind: ConfigMap
    name: kafka-ui
    namespace: kafka
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: kafka-ui
    namespace: kafka
    status: Synced
    version: v1
  - kind: ServiceAccount
    name: kafka-ui
    namespace: kafka
    status: Synced
    version: v1
  - group: apps
    health:
      status: Healthy
    kind: Deployment
    name: kafka-ui
    namespace: kafka
    status: Synced
    version: v1
  - group: networking.k8s.io
    health:
      status: Healthy
    kind: Ingress
    name: kafka-ui
    namespace: kafka
    status: Synced
    version: v1
  sourceType: Helm
  summary:
    externalURLs:
    - https://kafka.juxtagene.com/
    images:
    - docker.io/provectuslabs/kafka-ui:v0.6.0
  sync:
    comparedTo:
      destination:
        namespace: kafka
        server: https://kubernetes.default.svc
      source:
        helm:
          valueFiles:
          - values.yaml
        path: kafka/chart/kafka-ui
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    status: Synced
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: miso
spec:
  destination:
    namespace: miso
    server: https://kubernetes.default.svc
  project: default
  source:
    path: miso/kustomize
    repoURL: https://github.com/khk04/argocd.git
    targetRevision: HEAD
  syncPolicy:
    automated: {}
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
      limit: 2
    syncOptions:
    - CreateNamespace=true
    - Replace=true
status:
  controllerNamespace: argocd
  health:
    status: Healthy
  history:
  - deployStartedAt: "2024-08-08T14:54:50Z"
    deployedAt: "2024-08-08T14:54:51Z"
    id: 0
    initiatedBy:
      automated: true
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    source:
      path: miso/kustomize
      repoURL: https://github.com/khk04/argocd.git
      targetRevision: HEAD
  operationState:
    finishedAt: "2024-08-08T14:54:51Z"
    message: successfully synced (all tasks run)
    operation:
      initiatedBy:
        automated: true
      retry:
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 3m0s
        limit: 2
      sync:
        revision: 8a1d87610812d9341c78673bf3141e26452444ec
        syncOptions:
        - CreateNamespace=true
        - Replace=true
    phase: Succeeded
    startedAt: "2024-08-08T14:54:50Z"
    syncResult:
      resources:
      - group: ""
        hookPhase: Running
        kind: Namespace
        message: namespace/miso created
        name: miso
        namespace: miso
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Secret
        message: secret/juxtagene-docker-registry created
        name: juxtagene-docker-registry
        namespace: miso
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/frontend created
        name: frontend
        namespace: miso
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apps
        hookPhase: Running
        kind: Deployment
        message: deployment.apps/frontend created
        name: frontend
        namespace: miso
        status: Synced
        syncPhase: Sync
        version: v1
      - group: networking.k8s.io
        hookPhase: Running
        kind: Ingress
        message: ingress.networking.k8s.io/frontend created
        name: frontend
        namespace: miso
        status: Synced
        syncPhase: Sync
        version: v1
      - group: cert-manager.io
        hookPhase: Running
        kind: Issuer
        message: issuer.cert-manager.io/letsencrypt-prod-miso created
        name: letsencrypt-prod-miso
        namespace: miso
        status: Synced
        syncPhase: Sync
        version: v1
      revision: 8a1d87610812d9341c78673bf3141e26452444ec
      source:
        path: miso/kustomize
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
  reconciledAt: "2024-08-09T04:11:59Z"
  resources:
  - kind: Namespace
    name: miso
    status: Synced
    version: v1
  - kind: Secret
    name: juxtagene-docker-registry
    namespace: miso
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: frontend
    namespace: miso
    status: Synced
    version: v1
  - group: apps
    health:
      status: Healthy
    kind: Deployment
    name: frontend
    namespace: miso
    status: Synced
    version: v1
  - group: cert-manager.io
    health:
      message: The ACME account was registered with the ACME server
      status: Healthy
    kind: Issuer
    name: letsencrypt-prod-miso
    namespace: miso
    status: Synced
    version: v1
  - group: networking.k8s.io
    health:
      status: Healthy
    kind: Ingress
    name: frontend
    namespace: miso
    status: Synced
    version: v1
  sourceType: Kustomize
  summary:
    externalURLs:
    - https://miso.juxtagene.com/
    images:
    - docker.juxtagene.com/services/miso-frontend-api-server:latest
    - busybox
  sync:
    comparedTo:
      destination:
        namespace: miso
        server: https://kubernetes.default.svc
      source:
        path: miso/kustomize
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    status: Synced
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: redis
spec:
  destination:
    namespace: redis
    server: https://kubernetes.default.svc
  project: default
  source:
    helm:
      valueFiles:
      - values.yaml
    path: redis/redis
    repoURL: https://github.com/khk04/argocd.git
    targetRevision: HEAD
  syncPolicy:
    automated: {}
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
      limit: 2
    syncOptions:
    - CreateNamespace=true
    - Replace=true
status:
  controllerNamespace: argocd
  health:
    status: Healthy
  history:
  - deployStartedAt: "2024-08-08T14:55:44Z"
    deployedAt: "2024-08-08T14:55:47Z"
    id: 0
    initiatedBy:
      automated: true
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    source:
      helm:
        valueFiles:
        - values.yaml
      path: redis/redis
      repoURL: https://github.com/khk04/argocd.git
      targetRevision: HEAD
  operationState:
    finishedAt: "2024-08-08T14:55:47Z"
    message: successfully synced (all tasks run)
    operation:
      initiatedBy:
        automated: true
      retry:
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 3m0s
        limit: 2
      sync:
        revision: 8a1d87610812d9341c78673bf3141e26452444ec
        syncOptions:
        - CreateNamespace=true
        - Replace=true
    phase: Succeeded
    startedAt: "2024-08-08T14:55:44Z"
    syncResult:
      resources:
      - group: ""
        hookPhase: Running
        kind: Namespace
        message: namespace/redis created
        name: redis
        namespace: ""
        status: Synced
        syncPhase: PreSync
        version: v1
      - group: ""
        hookPhase: Running
        kind: ServiceAccount
        message: serviceaccount/redis created
        name: redis
        namespace: redis
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: ConfigMap
        message: configmap/redis-configuration created
        name: redis-configuration
        namespace: redis
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: ConfigMap
        message: configmap/redis-health created
        name: redis-health
        namespace: redis
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: ConfigMap
        message: configmap/redis-scripts created
        name: redis-scripts
        namespace: redis
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/redis-headless created
        name: redis-headless
        namespace: redis
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/redis-master created
        name: redis-master
        namespace: redis
        status: Synced
        syncPhase: Sync
        version: v1
      - group: ""
        hookPhase: Running
        kind: Service
        message: service/redis-replicas created
        name: redis-replicas
        namespace: redis
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apps
        hookPhase: Running
        kind: StatefulSet
        message: statefulset.apps/redis-replicas created
        name: redis-replicas
        namespace: redis
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apps
        hookPhase: Running
        kind: StatefulSet
        message: statefulset.apps/redis-master created
        name: redis-master
        namespace: redis
        status: Synced
        syncPhase: Sync
        version: v1
      revision: 8a1d87610812d9341c78673bf3141e26452444ec
      source:
        helm:
          valueFiles:
          - values.yaml
        path: redis/redis
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
  reconciledAt: "2024-08-09T04:11:59Z"
  resources:
  - kind: ConfigMap
    name: redis-configuration
    namespace: redis
    status: Synced
    version: v1
  - kind: ConfigMap
    name: redis-health
    namespace: redis
    status: Synced
    version: v1
  - kind: ConfigMap
    name: redis-scripts
    namespace: redis
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: redis-headless
    namespace: redis
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: redis-master
    namespace: redis
    status: Synced
    version: v1
  - health:
      status: Healthy
    kind: Service
    name: redis-replicas
    namespace: redis
    status: Synced
    version: v1
  - kind: ServiceAccount
    name: redis
    namespace: redis
    status: Synced
    version: v1
  - group: apps
    health:
      message: statefulset rolling update complete 1 pods at revision redis-master-5d85f98755...
      status: Healthy
    kind: StatefulSet
    name: redis-master
    namespace: redis
    status: Synced
    version: v1
  - group: apps
    health:
      message: statefulset rolling update complete 3 pods at revision redis-replicas-6ff5bd74fb...
      status: Healthy
    kind: StatefulSet
    name: redis-replicas
    namespace: redis
    status: Synced
    version: v1
  sourceType: Helm
  summary:
    images:
    - docker.io/bitnami/redis:7.0.12-debian-11-r2
  sync:
    comparedTo:
      destination:
        namespace: redis
        server: https://kubernetes.default.svc
      source:
        helm:
          valueFiles:
          - values.yaml
        path: redis/redis
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    status: Synced
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: redis-publisher
spec:
  destination:
    namespace: redis
    server: https://kubernetes.default.svc
  project: default
  source:
    path: redis/kustomize
    repoURL: https://github.com/khk04/argocd.git
    targetRevision: HEAD
  syncPolicy:
    automated: {}
    retry:
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m0s
      limit: 2
    syncOptions:
    - CreateNamespace=true
    - Replace=true
status:
  controllerNamespace: argocd
  health:
    status: Healthy
  history:
  - deployStartedAt: "2024-08-08T14:56:50Z"
    deployedAt: "2024-08-08T14:56:50Z"
    id: 0
    initiatedBy:
      automated: true
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    source:
      path: redis/kustomize
      repoURL: https://github.com/khk04/argocd.git
      targetRevision: HEAD
  operationState:
    finishedAt: "2024-08-08T14:56:50Z"
    message: successfully synced (all tasks run)
    operation:
      initiatedBy:
        automated: true
      retry:
        backoff:
          duration: 5s
          factor: 2
          maxDuration: 3m0s
        limit: 2
      sync:
        revision: 8a1d87610812d9341c78673bf3141e26452444ec
        syncOptions:
        - CreateNamespace=true
        - Replace=true
    phase: Succeeded
    startedAt: "2024-08-08T14:56:50Z"
    syncResult:
      resources:
      - group: ""
        hookPhase: Running
        kind: Secret
        message: secret/juxtagene-docker-registry created
        name: juxtagene-docker-registry
        namespace: redis
        status: Synced
        syncPhase: Sync
        version: v1
      - group: apps
        hookPhase: Running
        kind: Deployment
        message: deployment.apps/kafka-redis-publisher created
        name: kafka-redis-publisher
        namespace: redis
        status: Synced
        syncPhase: Sync
        version: v1
      revision: 8a1d87610812d9341c78673bf3141e26452444ec
      source:
        path: redis/kustomize
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
  reconciledAt: "2024-08-09T04:11:59Z"
  resources:
  - kind: Secret
    name: juxtagene-docker-registry
    namespace: redis
    status: Synced
    version: v1
  - group: apps
    health:
      status: Healthy
    kind: Deployment
    name: kafka-redis-publisher
    namespace: redis
    status: Synced
    version: v1
  sourceType: Kustomize
  summary:
    images:
    - docker.juxtagene.com/services/kafka-redis-publisher:latest
  sync:
    comparedTo:
      destination:
        namespace: redis
        server: https://kubernetes.default.svc
      source:
        path: redis/kustomize
        repoURL: https://github.com/khk04/argocd.git
        targetRevision: HEAD
    revision: 8a1d87610812d9341c78673bf3141e26452444ec
    status: Synced
---
